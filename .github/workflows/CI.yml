name: Build and Release APK

on:
  push:
    tags:
      - 'v[0-9]+.[0-9]+.[0-9]+'
  workflow_dispatch:  # ДОБАВЛЕНО: ручной запуск
    inputs:
      tag:
        description: 'Укажите тег для релиза Android приложения'
        required: true
        type: string

permissions:
  contents: write

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17'
          cache: 'gradle'

      # ДОБАВЛЕНО: Кеширование Gradle
      - name: Cache Gradle dependencies
        uses: actions/cache@v3
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: gradle-${{ runner.os }}-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            gradle-${{ runner.os }}-

      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      - name: Decode and Create Keystore File
        run: echo "${{ secrets.SIGNING_KEY_STORE_BASE64 }}" | base64 --decode > my-release-key.jks

      # ДОБАВЛЕНО: Определение версии
      - name: Get version from tag
        id: get_version
        run: |
          if [[ "${{ github.event_name }}" == "push" ]]; then
            VERSION="${{ github.ref_name }}"
          else
            VERSION="${{ github.event.inputs.tag }}"
          fi
          echo "version=${VERSION#v}" >> $GITHUB_OUTPUT

      # УЛУЧШЕНО: Сборка с версией
      - name: Build Signed APK
        run: ./gradlew assembleRelease -PversionName=${{ steps.get_version.outputs.version }}
        env:
          SIGNING_KEY_STORE_PATH: my-release-key.jks
          SIGNING_KEY_STORE_PASSWORD: ${{ secrets.SIGNING_KEY_STORE_PASSWORD }}
          SIGNING_KEY_ALIAS: ${{ secrets.SIGNING_KEY_ALIAS }}
          SIGNING_KEY_PASSWORD: ${{ secrets.SIGNING_KEY_PASSWORD }}

      # УЛУЧШЕНО: Переименование APK
      - name: Rename APK
        run: |
          apk_path=$(find app/build/outputs/apk/release -name "*.apk" | head -n 1)
          app_name="YourApp-${{ steps.get_version.outputs.version }}-release.apk"
          cp "$apk_path" "$app_name"
          echo "apk_path=$app_name" >> $GITHUB_ENV

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ github.ref_name || github.event.inputs.tag }}
          name: Android Release ${{ steps.get_version.outputs.version }}
          body: "Android приложение версии ${{ steps.get_version.outputs.version }}"
          files: ${{ env.apk_path }}
